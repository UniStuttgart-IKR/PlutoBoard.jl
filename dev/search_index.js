var documenterSearchIndex = {"docs":
[{"location":"","page":"Starting a new project","title":"Starting a new project","text":"","category":"page"},{"location":"#Starting-a-new-project","page":"Starting a new project","title":"Starting a new project","text":"","category":"section"},{"location":"#Setup","page":"Starting a new project","title":"Setup","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"Generate your package","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"$> julia -e 'using Pkg; Pkg.generate(\"YOUR_PACKAGE_NAME\")' && cd YOUR_PACKAGE_NAME","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"Add PlutoBoard and set it up","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"YOUR_PACKAGE_NAME$> julia --project -e 'using Pkg; Pkg.add(url=\"https://github.com/UniStuttgart-IKR/PlutoBoard.jl\"); using PlutoBoard; PlutoBoard.setup()' ","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"Run the notebook","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"YOUR_PACKAGE_NAME$> julia --project -e 'using Pluto; Pluto.run(notebook=\"PlutoBoardNotebook.jl\")'","category":"page"},{"location":"#Write-your-own-code","page":"Starting a new project","title":"Write your own code","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"There is some hierarchy:","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"main in src/Main.jl gets called in the beginning, so use this as julia entry point\nfunctions that should be callable from js need to go into src/Functions.jl\nall javascript files in static/javascript/ are getting executed, though static/javascript/javascript.js is the last one, so use this as js entry point","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"There is a simple example in src/Functions.jl, src/static/index.html and src/static/javascript/javascript.js about calling a julia function from javascript with callbacks.","category":"page"},{"location":"#Simple-calling-of-a-Julia-function-within-HTML-using-a-button-and-an-input","page":"Starting a new project","title":"Simple calling of a Julia function within HTML using a button and an input","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"First, lets write a simple Julia function in src/Functions.jl","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"function get_cube(num; ws)\n    # iterate 50 times\n\tfor i in 1:50\n        # send each i to the frontend\n\t\tPlutoBoard.send_to_ws(ws, i/50)\n        # sleep a little bit so we have time to see it\n\t\tsleep(0.05)\n\tend\n    # finally return the cube of `num`\n\treturn num^3\nend","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"Now we create an input with id=buttonInput for our number in static/index.html","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"<input type=\"text\" id=\"buttonInput\" placeholder=\"Input number\">","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"as well as a button","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"<button class=\"btn btn-light\" id=\"calculateButton\" onclick=\"calculateVeryHardStuff()\">Calculate</button>","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"and a div to show our output","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"<div class=\"text-white\" id=\"buttonOutput\">Output: </div>","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"Since we used calculateVeryHardStuff in our button, we need to define it aswell. We do this in static/javascript/javascript.js","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"function calculateVeryHardStuff() {\n    // get our input\n    const input = document.getElementById(\"buttonInput\");\n    // get the value of input \n    const number = parseInt(input.value);\n\n    // call our previously defined Julia function with arguments and callback\n    callJuliaFunction(\n        // \"get_cube\" is the function we want to call\n        \"get_cube\", {\n        // `get_cube` takes one argument, in this case we pass `number`\n        args: [number],\n        // also pass a callback when we get a response (remember, we are sending the progress of the for loop, i/50)\n        response_callback: (\n            // define the function\n            r => {\n                // get output div\n                const outputP = document.getElementById(\"buttonOutput\");\n                // set innerHTML of output div to show the progress\n                outputP.innerHTML = `${Math.round(r * 100)}%...`;\n            }\n        )\n    })\n    // after getting the return value we want to show it in the output div\n    .then(\n        r => {\n            const outputP = document.getElementById(\"buttonOutput\");\n            outputP.innerHTML = `Cube of ${number} is ${r}`;\n        }\n    )\n}","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"And that's it, we have created a simple application using HTML and JavaScript as input and Julia for calculating!","category":"page"},{"location":"#PlutoBoard.jl-Documentation","page":"Starting a new project","title":"PlutoBoard.jl Documentation","text":"","category":"section"},{"location":"#PlutoBoard-interface","page":"Starting a new project","title":"PlutoBoard interface","text":"","category":"section"},{"location":"#Julia-interface","page":"Starting a new project","title":"Julia interface","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"initialize(_html_path::String, _css_path::String; fullscreen::Bool = false, bootstrap::Bool = false, hide_notebook::Bool = true)","category":"page"},{"location":"#PlutoBoard.initialize-Tuple{String, String}","page":"Starting a new project","title":"PlutoBoard.initialize","text":"initiliaize(\n\thtml_path::String,\n\tcss_path::String\n\t;\n\tfullscreen::Bool = true,\n\thide_notebook::Bool = true,\n\tscripts::Array{String} = [],\n\tlinks::Array{String} = [],\n) -> nothing\n\nInitializes the PlutoBoard module with parameters.\n\n\n\n\n\n","category":"method"},{"location":"#JavaScript-interface","page":"Starting a new project","title":"JavaScript interface","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"These functions can be called in the browser and are written in JavaScript.","category":"page"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"callJuliaFunction()","category":"page"},{"location":"#PlutoBoard.callJuliaFunction-Tuple{}","page":"Starting a new project","title":"PlutoBoard.callJuliaFunction","text":"async callJuliaFunction(\n\tfunc_name,\n\t{ args = [], kwargs = {}, response_callback = () => { } } = {}\n) -> Promise\n\nkwargs are kwargs for the Julia function to be called.\n\nCalls specified Julia function with args and callback within browser context from JavaScript.\n\nExample usage:\n\ncallJuliaFunction(\"get_cube\", {\n\targs: [number],\n\tresponse_callback: (\n\t\tr => {\n\t\t\tconst outP = document.getElementById(\"buttonOutput\");\n\t\t\toutP.innerHTML = `Cube of ${number}... ${Math.round(r * 100)}%`;\n\t\t}\n\t)\n\t}).then(\n\t\tr => {\n\t\t\tconst outP = document.getElementById(\"buttonOutput\");\n\t\t\toutP.innerHTML = `The cube of ${number} is ${r}`;\n\t\t}\n\t)\n\n\n\n\n\n","category":"method"},{"location":"#Internal-functions","page":"Starting a new project","title":"Internal functions","text":"","category":"section"},{"location":"#Julia-internal-functions","page":"Starting a new project","title":"Julia internal functions","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"load_scripts_and_links()\nload_html()\nload_html_string_to_body()\nload_js()\nopen_file(path::String)\ncopy_with_delete(from::String, to::String)\nsetup()\nget_package_name()","category":"page"},{"location":"#PlutoBoard.load_scripts_and_links-Tuple{}","page":"Starting a new project","title":"PlutoBoard.load_scripts_and_links","text":"load_scripts_and_links() -> HypertextLiteral.Result\n\nReturns a HypertextLiteral.Result object with scritps and links to load.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.load_html-Tuple{}","page":"Starting a new project","title":"PlutoBoard.load_html","text":"load_html() -> HTML\n\nReturns a HTML object with the html and css loaded.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.load_html_string_to_body-Tuple{}","page":"Starting a new project","title":"PlutoBoard.load_html_string_to_body","text":"load_html_string_to_body() -> HypertextLiteral.Result\n\nReturns a HypertextLiteral.Result object to call a javascript function to insert the html and css to the body.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.load_js-Tuple{}","page":"Starting a new project","title":"PlutoBoard.load_js","text":"load_js() -> HypertextLiteral.Result\n\nReturns a HypertextLiteral.Result object to load all javascript files.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.open_file-Tuple{String}","page":"Starting a new project","title":"PlutoBoard.open_file","text":"open_file(\n\tpath::String\n)::String\n\nOpens a file and returns its content as a string.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.copy_with_delete-Tuple{String, String}","page":"Starting a new project","title":"PlutoBoard.copy_with_delete","text":"copy_with_delete(\n\tfrom::String,\n\tto::String\n)::nothing\n\nCopies a file from one location to another and deletes the original file. Sets the permissions of the copied file to 644.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.setup-Tuple{}","page":"Starting a new project","title":"PlutoBoard.setup","text":"setup(\n\texample::String=\"default\"\n)::nothing\n\nSets up the PlutoBoard module by copying the necessary files to the current working directory. Example can either be default or vue or vue_moving_cells.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.get_package_name-Tuple{}","page":"Starting a new project","title":"PlutoBoard.get_package_name","text":"get_package_name()::String\n\nReturns the name of the package from the Project.toml file.\n\n\n\n\n\n","category":"method"},{"location":"#JavaScript-internal-functions","page":"Starting a new project","title":"JavaScript internal functions","text":"","category":"section"},{"location":"","page":"Starting a new project","title":"Starting a new project","text":"placeIframe()\nupdateAllCells()\nupdateCell()\ninsertHTMLToBody()","category":"page"},{"location":"#PlutoBoard.placeIframe-Tuple{}","page":"Starting a new project","title":"PlutoBoard.placeIframe","text":"placeIframe(targetCellID, destinationDiv)\n\nPlaces an iframe of the site itself in destinationDiv only showing targetCellID.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.updateAllCells-Tuple{}","page":"Starting a new project","title":"PlutoBoard.updateAllCells","text":"async updateAllCells()\n\nForcefully reevaluates all Pluto cells.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.updateCell-Tuple{}","page":"Starting a new project","title":"PlutoBoard.updateCell","text":"async updateCell(cellid)\n\nReevaluates Pluto cell with cellid.\n\n\n\n\n\n","category":"method"},{"location":"#PlutoBoard.insertHTMLToBody-Tuple{}","page":"Starting a new project","title":"PlutoBoard.insertHTMLToBody","text":"insertHTMLToBody(html, css)\n\nAppends html and css string below body.\n\n\n\n\n\n","category":"method"}]
}
